import streamlit as st
import json

# Configura√ß√£o b√°sica da p√°gina
st.set_page_config(page_title="NEXUS - Verifica√ß√£o de Configura√ß√£o", page_icon="üîß")

st.title("NEXUS - Verifica√ß√£o de Configura√ß√£o")
st.write("Este aplicativo verifica se os segredos est√£o configurados corretamente.")

# Tentar acessar segredos de diferentes maneiras
try:
    # M√©todo 1: Acesso direto via st.secrets
    if "OPENAI_API_KEY" in st.secrets:
        api_key = st.secrets["OPENAI_API_KEY"]
        masked_key = api_key[:5] + "..." + api_key[-4:] if len(api_key) > 10 else "***"
        st.success(f"‚úÖ Segredo encontrado via st.secrets['OPENAI_API_KEY']: {masked_key}")
    else:
        st.error("‚ùå Segredo 'OPENAI_API_KEY' n√£o encontrado no st.secrets")
    
    # M√©todo 2: Listar todos os segredos dispon√≠veis (sem mostrar valores)
    st.subheader("Segredos dispon√≠veis:")
    secret_keys = list(st.secrets.keys())
    st.write(f"Chaves encontradas: {secret_keys}")
    
    # M√©todo 3: Tentar acessar via get
    api_key_get = st.secrets.get("OPENAI_API_KEY", "N√ÉO ENCONTRADO")
    if api_key_get != "N√ÉO ENCONTRADO":
        masked_key_get = api_key_get[:5] + "..." + api_key_get[-4:] if len(api_key_get) > 10 else "***"
        st.success(f"‚úÖ Segredo encontrado via st.secrets.get(): {masked_key_get}")
    else:
        st.error("‚ùå Segredo n√£o encontrado via m√©todo get()")
    
    # Verificar o formato do segredo
    if "OPENAI_API_KEY" in st.secrets:
        prefix = api_key[:8] if len(api_key) > 8 else api_key
        st.write(f"Prefixo da chave: {prefix}")
        
        if prefix.startswith("sk-"):
            st.success("‚úÖ Formato da chave parece correto (come√ßa com 'sk-')")
        else:
            st.warning("‚ö†Ô∏è Formato da chave pode estar incorreto (n√£o come√ßa com 'sk-')")
    
except Exception as e:
    st.error(f"Erro ao acessar segredos: {type(e).__name__}: {str(e)}")

st.write("---")
st.caption("Esta √© uma ferramenta de diagn√≥stico para o NEXUS.")
